{
    "contents" : "#-------------------------------------------------------------------\n#Data product final project\n#Purpose : Predicting Housing costs based on different predictors\n#          including owner's age, income, and number of bedrooms in \n#          the house\n#Date : 4/19/2016\n#Author :\n#-------------------------------------------------------------------\n\n#--------------------------------- DATA SUMMARY ------------------------------------------------------------------\n#The data used is from the U.S department of Housing and Urban Development website. It's the Housing Affordability\n#data derived from the American Housing Survey. More info can be found here \n#https://www.huduser.gov/portal/datasets/hads/hads.html\n\n#--------------------------------- DATA PRE-PROCESSING -----------------------------------------------------------\n#load required libraries\npacman::p_load(dplyr,funModeling,caret,data.table,rpart,randomForest,rattle, ggplot2, gridExtra,shiny,DT)\n\n#import the data\ndownload.file(\"https://www.huduser.gov/portal/datasets/hads/hads2013n_ASCII.zip\", destfile = \"housing_data.zip\")\n#unzip file\nunzip(\"housing_data.zip\")\n#read the data\ndata <- read.table(\"thads2013n.txt\", sep = \",\", header = TRUE)\n#rename variables to lower case\nnames(data) <- tolower(names(data))\n#select variables of interest\ndata <- as.data.table(data) %>% select(costmed, totsal, bedrms, age1, built) \n#scaling the housing cost to yearly cost for comparison prupose to yearly income\ndata[, scale_cost := costmed * 12]\n#remove values that are zero or less than zero\ndata <- data[(apply(data, 1, function(x) all(x > 0)))]\n\n#subset to get houses built post 2009\ndt <- data %>% filter(built >= 2010)\n\n#get the overall status of the data. The status resulted in a missing values free \n#data. Alos no zero values in the data\ndt_status <- df_status(dt)\n\n#--------------------------------- DATA ANALYSIS --------------------------------------------------------------\n#Partition the training data into train and test sets\ninTrain <- createDataPartition(y=dt$scale_cost, p=0.6, list=FALSE)\ntrainset<- dt[inTrain,]; testset <- dt[-inTrain,]\n\n#Fit models : trees, random forest and boosting \nrpFit <- train(scale_cost~.,data=trainset, method=\"rpart\")\nrfFit <- train(scale_cost~.,data=trainset, method=\"rf\",prox=TRUE)\ngbmFit <- train(scale_cost~.,data=trainset, method=\"gbm\")\n#plot models \nrp.plot <- plot(rpFit, width = 400, height = 300, title = \"Recursive Part Reg Trees\")\nrf.plot <- plot(rfFit, width = 400, height = 300, title = \"Random Forest\")\ngbm.plot <- plot(gbmFit, width = 400, height = 300, title = \"Generalized Boosted Model\")\n#clearly random forest preformed better with the lowest RMSE\ndiagplots <- grid.arrange(rp.plot,rf.plot,gbm.plot)\n#concatenating the fitted models into a single vector\nmodel <- c(\"Recursive Part Reg Trees\",\"Random Forest\",\"Generalized Boosted Model\")\n#Comparing the models to get the best fitted model\nrmse <- c(min(rpFit$results$RMSE),\n          min(rfFit$results$RMSE),\n          min(gbmFit$results$RMSE))\nrsquared <- c(max(rpFit$results$Rsquared),\n              max(rfFit$results$Rsquared),\n              max(gbmFit$results$Rsquared))\n#gathering accuracy info into a data frame\nperformance <- data.frame(model, rmse, rsquared)\n\n#get 5 test datasets from the original data\ntestset2 <- filter(data, built %in% c(2007,2008,2009))\ntestset3 <- filter(data, built %in% c(2004,2005,2006))\ntestset4 <- filter(data, built %in% c(2001,2002,2003))\ntestset5 <- filter(data, built %in% c(1985,1990,2000))\n\n#--- SERVER\n\nshinyServer(function(input, output) {\n        \n        #input test dataset\n        datasetInput <- reactive({\n                switch(input$dataset,\n                       \"testset1\"=testset,\n                       \"testset2\"=testset2,\n                       \"testset3\"=testset3,\n                       \"testset4\"=testset4,\n                       \"testset5\"=testset5)\n        })\n        #Generate a summary of measures of accuracy for 3 different models (RMSE and Rsquared)\n        output$summary <- renderPrint({\n                          performance\n        })\n        \n        # customize the length drop-down menu; display 5 rows per page by default\n        output$plot <- renderPlot({\n                    test <- datasetInput()\n                    #The random forest model is selected for prediction as it's the best\n                    test$pred <- predict(rfFit, test)\n                    #make a scatter plot comparing observed and predicted outcome\n                    p <- ggplot(test, aes(scale_cost, pred)) + geom_point(color=\"cadetblue\", size=2)\n                    p <- p + geom_abline(intercept = 0, slope = 1, color = \"orange\", size = 1)\n                    p <- p + xlab(\"Obesrved Housing Cost(year)\") + ylab(\"Predicted Housing Cost(year)\")\n                    p <- p + ggtitle(\"Predicted vs Observed Housing Cost from a Random Forest model\")\n                    p <- p + theme_bw()\n                    p\n        })\n        \n        #plot dignostics plots for models\n        output$diagnostics <- renderPlot({\n                grid.arrange(rp.plot,rf.plot,gbm.plot)\n        })\n          \n})\n\n",
    "created" : 1461084116606.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1341115818",
    "id" : "119534CB",
    "lastKnownWriteTime" : 1461128941,
    "path" : "~/COURSERA/data_products/server.R",
    "project_path" : null,
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}